@model KinisiKaiLeitourgeia.Models.Appointments.Appointment
@using Kendo.Mvc.UI
@{
    IEnumerable<KinisiKaiLeitourgeia.Models.People.Patient> Patients;
    IEnumerable<KinisiKaiLeitourgeia.Models.People.Therapist> Therapists;
    IEnumerable<KinisiKaiLeitourgeia.Models.Dictionaries.AppointmentPlace> AppointmentPlaces;
    IEnumerable<KinisiKaiLeitourgeia.Models.Dictionaries.TypeAppointment> TypeAppointment;

    using (var _context = new KinisiKaiLeitourgeia.Models.ApplicationDbContext())
    {
        Patients = _context.Patients.OrderBy(p => p.Surname).ToList();
        Therapists = _context.Therapists.OrderBy(p => p.Surname).ToList();
        AppointmentPlaces = _context.AppointmentPlaces.ToList();
        TypeAppointment = _context.TypeAppointments.ToList();
    }
}

<div class="k-edit-label">
    @(Html.LabelFor(model => model.PatientId))
</div>
<div data-container-for="PatientId" class="k-edit-field">
@(Html.Kendo().DropDownListFor(model => model.PatientId)
        .HtmlAttributes(new { data_bind = "value:PatientId", style = "width: 200px" })
        .DataTextField("FullName")
        .DataValueField("Id")
        .OptionLabel("None")
        .Filter(FilterType.StartsWith)
        .ValuePrimitive(true)
        .BindTo(Patients)
        .ToClientTemplate()
)
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.TherapistId))
</div>
<div data-container-for="TherapistId" class="k-edit-field">
    @(Html.Kendo().DropDownListFor(model => model.TherapistId)
        .HtmlAttributes(new { data_bind = "value:TherapistId", style = "width: 200px" })
        .DataTextField("FullName")
        .DataValueField("Id")
        .OptionLabel("None")
        .ValuePrimitive(true)
        .BindTo(Therapists).ToClientTemplate()
    )
</div>
<div class="k-edit-label">
    @(Html.LabelFor(model => model.AppointmentPlaceId))
</div>
<div data-container-for="AppointmentPlaceId" class="k-edit-field">
    @(Html.Kendo().DropDownListFor(model => model.AppointmentPlaceId)
        .HtmlAttributes(new { data_bind = "value:AppointmentPlaceId", style = "width: 200px" })
        .DataTextField("Name")
        .DataValueField("Id")
        .OptionLabel("None")
        .ValuePrimitive(true)
        .BindTo(AppointmentPlaces).ToClientTemplate()
    )
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.TypeAppointmentId))
</div>
<div data-container-for="TypeAppointmentId" class="k-edit-field">
    @(Html.Kendo().DropDownListFor(model => model.TypeAppointmentId)
        .HtmlAttributes(new { data_bind = "value:TypeAppointmentId", style = "width: 200px" })
        .DataTextField("Name")
        .DataValueField("Id")
        .OptionLabel("None")
        .ValuePrimitive(true)
        .BindTo(TypeAppointment).ToClientTemplate()
    )
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.Description))
</div>
<div data-container-for="description" class="k-edit-field">
    @(Html.TextAreaFor(model => model.Description, new { @class = "k-textbox", data_bind = "value:description" }))
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.Price))
</div>
<div data-container-for="price" class="k-edit-field">
    @(Html.TextBoxFor(model => model.Price, "{0:c}", new { @class = "k-textbox currency", data_bind = "value:Price" }))
</div>



<div class="k-edit-label">
    @(Html.LabelFor(model => model.RecurrenceRule))
</div>
<div data-container-for="recurrenceRule" class="k-edit-field">
    @(Html.Kendo().RecurrenceEditorFor(model => model.RecurrenceRule)
        .HtmlAttributes(new { data_bind = "value:recurrenceRule" }))
</div>

<div class="k-edit-label">
    @(Html.LabelFor(model => model.IsAllDay))
</div>
<div data-container-for="isAllDay" class="k-edit-field">
    <input data-bind="checked: isAllDay" data-val="true" id="IsAllDay" name="IsAllDay" type="checkbox" />
</div>